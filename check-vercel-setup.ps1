# üöÄ Script de verifica√ß√£o de build para Vercel (Windows PowerShell)
# Execute: .\check-vercel-setup.ps1

Write-Host "üîç Verificando configura√ß√£o de build..." -ForegroundColor Cyan

# 1. Verificar se as vari√°veis de ambiente est√£o configuradas
Write-Host "üìã Verificando vari√°veis de ambiente..." -ForegroundColor Yellow

if (Test-Path ".env") {
    Write-Host "‚úÖ Arquivo .env encontrado" -ForegroundColor Green
    
    $envContent = Get-Content ".env" -Raw
    
    if ($envContent -match "VITE_SUPABASE_URL") {
        Write-Host "‚úÖ VITE_SUPABASE_URL configurado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå VITE_SUPABASE_URL n√£o encontrado" -ForegroundColor Red
    }
    
    if ($envContent -match "VITE_SUPABASE_PUBLISHABLE_KEY") {
        Write-Host "‚úÖ VITE_SUPABASE_PUBLISHABLE_KEY configurado" -ForegroundColor Green
    } else {
        Write-Host "‚ùå VITE_SUPABASE_PUBLISHABLE_KEY n√£o encontrado" -ForegroundColor Red
    }
} else {
    Write-Host "‚ùå Arquivo .env n√£o encontrado" -ForegroundColor Red
}

# 2. Verificar Node.js e NPM
Write-Host "üì¶ Verificando Node.js e NPM..." -ForegroundColor Yellow

try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js version: $nodeVersion" -ForegroundColor Green
    
    $npmVersion = npm --version
    Write-Host "‚úÖ NPM version: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js ou NPM n√£o encontrado" -ForegroundColor Red
}

# 3. Executar build de teste
Write-Host "üèóÔ∏è Executando build de teste..." -ForegroundColor Yellow

try {
    npm run build
    
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ Build executado com sucesso" -ForegroundColor Green
        
        # Verificar se os arquivos foram gerados
        if (Test-Path "dist") {
            Write-Host "‚úÖ Diret√≥rio dist criado" -ForegroundColor Green
            
            if (Test-Path "dist/index.html") {
                Write-Host "‚úÖ index.html gerado" -ForegroundColor Green
            } else {
                Write-Host "‚ùå index.html n√£o encontrado em dist/" -ForegroundColor Red
            }
            
            # Mostrar arquivos gerados
            Write-Host "üìä Arquivos gerados:" -ForegroundColor Cyan
            Get-ChildItem "dist" -Recurse | Select-Object Name, Length | Format-Table
            
        } else {
            Write-Host "‚ùå Diret√≥rio dist n√£o criado" -ForegroundColor Red
        }
    } else {
        Write-Host "‚ùå Build falhou" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erro ao executar build: $_" -ForegroundColor Red
}

# 4. Verificar configura√ß√£o do Vercel
Write-Host "üîß Verificando vercel.json..." -ForegroundColor Yellow

if (Test-Path "vercel.json") {
    Write-Host "‚úÖ vercel.json encontrado" -ForegroundColor Green
    
    $vercelConfig = Get-Content "vercel.json" -Raw
    
    if ($vercelConfig -match "index\.html") {
        Write-Host "‚úÖ Rewrites para SPA configurados" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Rewrites para SPA n√£o encontrados" -ForegroundColor Red
    }
    
    if ($vercelConfig -match "buildCommand") {
        Write-Host "‚úÖ Build command configurado" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è Build command n√£o especificado (usando padr√£o)" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå vercel.json n√£o encontrado" -ForegroundColor Red
}

# 5. Verificar package.json
Write-Host "üìã Verificando package.json..." -ForegroundColor Yellow

if (Test-Path "package.json") {
    $packageJson = Get-Content "package.json" | ConvertFrom-Json
    
    Write-Host "‚úÖ Nome do projeto: $($packageJson.name)" -ForegroundColor Green
    Write-Host "‚úÖ Vers√£o: $($packageJson.version)" -ForegroundColor Green
    
    if ($packageJson.scripts.build) {
        Write-Host "‚úÖ Script de build configurado: $($packageJson.scripts.build)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Script de build n√£o encontrado" -ForegroundColor Red
    }
}

Write-Host ""
Write-Host "üéâ Verifica√ß√£o conclu√≠da!" -ForegroundColor Green
Write-Host "üìù Para deploy no Vercel:" -ForegroundColor Cyan
Write-Host "   1. Configure as vari√°veis de ambiente no painel do Vercel" -ForegroundColor White
Write-Host "   2. Conecte o reposit√≥rio GitHub" -ForegroundColor White
Write-Host "   3. O deploy ser√° autom√°tico em cada push" -ForegroundColor White
Write-Host ""
Write-Host "üîó Links √∫teis:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ Vercel Dashboard: https://vercel.com/dashboard" -ForegroundColor White
Write-Host "   ‚Ä¢ Documenta√ß√£o: https://vercel.com/docs" -ForegroundColor White